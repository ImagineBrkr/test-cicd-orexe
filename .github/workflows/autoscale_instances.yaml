name: Auto scaling instances
run-name: Auto scaling instances

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  # code:
  #   name: Obtaining the code
  #   runs-on: ubuntu-latest
      
  build_and_deploy:
    name: Building and deploying
    runs-on: ubuntu-latest
    env:
      TF_VAR_default_name: Salvattore
    defaults:
      run:
        working-directory: ./architeture2/autoscale_instances
    # outputs:
    #   lb_url: ${{ steps.get_lb_url.outputs.lb_url }}
    steps:
      - name: Check out repo's default branch
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # - uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # - run: |
      #     terraform init
      #     terraform plan
      #     terraform apply --auto-approve

      
      # - run: |
      #     lb_url=$(terraform output -raw lb_url)
      #     echo $lb_url
      #     echo "lb_url=$lb_url" >> $GITHUB_OUTPUT
      #   id: get_lb_url

      - run: |
          echo 'wasd' > customkey.pem
          ls
      - uses: actions/upload-artifact@v3
        with:
          name: key_and_tf
          path: |
            customkey.pem
          if-no-files-found: error

      - run: terraform destroy --auto-approve
        if: ${{ failure() || cancelled() }}

  # lb_test:
  #   needs: [build_and_deploy]
  #   name: Testing load balancer
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./architeture2/autoscale_instances
  #   steps:
  #     - name: Check out repo's default branch
  #       uses: actions/checkout@v3

  #     - name: Setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'
  #         cache: 'pip'   
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: key_and_tf

  #     - name: Install dependencies
  #       run: pip install -r ./tests/requirements.txt  

  #     - uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - run: python -m pytest tests/load_balancer -v
  #       env:
  #         LB_URL: ${{ needs.build_and_deploy.outputs.lb_url }}
  #     - run: terraform destroy --auto-approve
  #       if: ${{ failure() || cancelled() }}

  test_stress:
    needs: [build_and_deploy]
    name: Testing auto scaler
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./architeture2/autoscale_instances
    steps:
      - name: Check out repo's default branch
        uses: actions/checkout@v3

      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.9'
      #     cache: 'pip'   

      # - name: Install dependencies
      #   run: pip install -r ./tests/requirements.txt  
      # - run: pip install boto3

      - uses: actions/download-artifact@v3
        with:
          name: key_and_tf
        
      # - uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      - run: |
          ls -lha
          cat customKey.pem
          sudo chmod 400 ./customKey.pem
          sudo chmod 400 customKey.pem
          ls -lha
          python -m pytest tests/auto_scale/test.py

      # - run: terraform destroy --auto-approve
      #   if: ${{ failure() || cancelled() }}